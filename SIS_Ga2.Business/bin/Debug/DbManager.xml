<?xml version="1.0"?>
<doc>
<assembly>
<name>
DbManager
</name>
</assembly>
<members>
<member name="T:DbManager.My.Resources.Resources">
<summary>
  Clase de recurso con establecimiento inflexible de tipos, para buscar cadenas traducidas, etc.
</summary>
</member>
<member name="P:DbManager.My.Resources.Resources.ResourceManager">
<summary>
  Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
</summary>
</member>
<member name="P:DbManager.My.Resources.Resources.Culture">
<summary>
  Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
  búsquedas de recursos mediante esta clase de recurso con establecimiento inflexible de tipos.
</summary>
</member>
<member name="M:DbManager.DataObjects.Parameter.Add(System.String,System.Object)">
 <summary>
  Pocedimiento que agrega a la colección de parametros el nombre de un parametro
  y el valor asociado, no es necesario indicar el tipo de dato a ingresar.
 </summary>
</member>
<member name="M:DbManager.DataObjects.Parameter.Remove(System.Int32)">
 <summary>
  Pocedimiento que elimina un objeto de la colección de parametros en base a su posición
 en dicha colección de objetos
 </summary>
</member>
<member name="M:DbManager.DataObjects.Parameter.Remove(System.String)">
 <summary>
  Pocedimiento que elimina un objeto de la colección de parametros en base al nombre del parametro
 en dicha colección de objetos
 </summary>
</member>
<member name="P:DbManager.DataObjects.Parameter.Item(System.Int32)">
 <summary>
  Función que devuelve el elementos SqlParameter de la colección en base a su posición
 </summary>
</member>
<member name="P:DbManager.DataObjects.Parameter.Item(System.String)">
 <summary>
  Función que devuelve el elementos SqlParameter de la colección en base a su nombre de parametro
 </summary>
</member>
<member name="P:DbManager.DataObjects.Parameter.Count">
 <summary>
  Propiedad que devuelve el número de elementos de la colección
 </summary>
</member>
<member name="T:DbManager.DataObjects.Service">
<remarks/>
</member>
<member name="M:DbManager.DataObjects.Service.#ctor">
<remarks/>
</member>
<member name="E:DbManager.DataObjects.Service.getDataCompleted">
<remarks/>
</member>
<member name="E:DbManager.DataObjects.Service.executeStatementCompleted">
<remarks/>
</member>
<member name="M:DbManager.DataObjects.Service.getData(System.String,System.String)">
<remarks/>
</member>
<member name="M:DbManager.DataObjects.Service.BegingetData(System.String,System.String,System.AsyncCallback,System.Object)">
<remarks/>
</member>
<member name="M:DbManager.DataObjects.Service.EndgetData(System.IAsyncResult)">
<remarks/>
</member>
<member name="M:DbManager.DataObjects.Service.getDataAsync(System.String,System.String)">
<remarks/>
</member>
<member name="M:DbManager.DataObjects.Service.getDataAsync(System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:DbManager.DataObjects.Service.executeStatement(System.String,System.String)">
<remarks/>
</member>
<member name="M:DbManager.DataObjects.Service.BeginexecuteStatement(System.String,System.String,System.AsyncCallback,System.Object)">
<remarks/>
</member>
<member name="M:DbManager.DataObjects.Service.EndexecuteStatement(System.IAsyncResult)">
<remarks/>
</member>
<member name="M:DbManager.DataObjects.Service.executeStatementAsync(System.String,System.String)">
<remarks/>
</member>
<member name="M:DbManager.DataObjects.Service.executeStatementAsync(System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:DbManager.DataObjects.Service.CancelAsync(System.Object)">
<remarks/>
</member>
<member name="T:DbManager.DataObjects.getDataCompletedEventHandler">
<remarks/>
</member>
<member name="T:DbManager.DataObjects.getDataCompletedEventArgs">
<remarks/>
</member>
<member name="P:DbManager.DataObjects.getDataCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:DbManager.DataObjects.executeStatementCompletedEventHandler">
<remarks/>
</member>
<member name="T:DbManager.DataObjects.executeStatementCompletedEventArgs">
<remarks/>
</member>
<member name="P:DbManager.DataObjects.executeStatementCompletedEventArgs.Result">
<remarks/>
</member>
<member name="M:DbManager.DataObjects.SqlManager.#ctor(System.String)">
 <summary>
 Clase que facilita el acceso a datos para iSeries DB2 AS400.
 Posee 5 Funciones y 2 Procedimientos, cada uno con sobrecarga de parametros.
 Indique la llave o clave del archivo de configuracion app.config
 </summary>
</member>
<member name="M:DbManager.DataObjects.SqlManager.#ctor">
 <summary>
 Clase que facilita el acceso a datos para iSeries DB2 AS400.
 Posee 5 Funciones y 2 Procedimientos, cada uno con sobrecarga de parametros.
 Este tipo de inicialización leerá el archivo de configuracion
 </summary>
</member>
<member name="M:DbManager.DataObjects.SqlManager.BeginGlobalTransaction">
 <summary>
  Procedimiento que Inicia el control de transacción e instancia la conexion al servidor
 </summary>
</member>
<member name="M:DbManager.DataObjects.SqlManager.CommitGlobalTransaction">
 <summary>
  Procedimiento que Confirma el control de transacción y cierra la conexion
 </summary>
</member>
<member name="M:DbManager.DataObjects.SqlManager.RollBackGlobalTransaction">
 <summary>
  Procedimiento que Restaura el control de transacción y cierra la conexion
 </summary>
</member>
<member name="M:DbManager.DataObjects.SqlManager.ExecuteDataSet(System.String,DbManager.DataObjects.Parameter)">
 <summary>
  Función que devuelve un DataSet en base a un stored procedure [StoredPocedure param] y
  un objeto (tipo colección) de parametros
 </summary>
</member>
<member name="M:DbManager.DataObjects.SqlManager.ExecuteDataSet(System.String)">
 <summary>
  Función que devuelve un DataSet en base a una cadena SQL
 </summary>
</member>
<member name="M:DbManager.DataObjects.SqlManager.ExecuteNonQuery(System.String,DbManager.DataObjects.Parameter)">
 <summary>
  Procedimiento que ejecuta una instrucción SQL en base a un stored procedure [StoredPocedure param] y
  un objeto (tipo colección) de parametros
 </summary>
</member>
<member name="M:DbManager.DataObjects.SqlManager.ExecuteNonQuery(System.String)">
 <summary>
  Procedimiento que ejecuta una instrucción SQL en base a un stored procedure [StoredPocedure param] y
  un objeto (tipo colección) de parametros
 </summary>
</member>
<member name="M:DbManager.DataObjects.SqlManager.ExecuteNoQuery(System.String,DbManager.DataObjects.Parameter)">
 <summary>
  Función que puede devolver (opcional) un objeto, (confirmación de operación)
  en base a un stored procedure [StoredPocedure param] y
  un objeto (tipo colección) de parametros
 </summary>
</member>
<member name="M:DbManager.DataObjects.SqlManager.ExecuteNoQuery(System.String)">
 <summary>
  Función que puede devolver (opcional) un objeto, (confirmación de operación)
  en base a una instrucción SQL
 </summary>
</member>
<member name="M:DbManager.DataObjects.SqlManager.ExecuteScalar(System.String,DbManager.DataObjects.Parameter)">
 <summary>
  Función que devuelve un único resultado 
  en base a un stored procedure [StoredPocedure param] y
  un objeto (tipo colección) de parametros
 </summary>
</member>
<member name="M:DbManager.DataObjects.SqlManager.ExecuteScalar(System.String)">
 <summary>
  Función que devuelve un único resultado 
  en base a una instucción SQL
 </summary>
</member>
<member name="M:DbManager.DataObjects.SqlManager.getStatement``1(System.String,DbManager.DataObjects.Parameter)">
 <summary>
  Función que devuelve una Lista de objetos dependiento de la clase que se envia utilizando
   un stored procedure [StoredPocedure param] y
  un objeto (tipo colección) de parametros
 </summary>
</member>
<member name="M:DbManager.DataObjects.SqlManager.ExecuteDataTable(System.String,DbManager.DataObjects.Parameter)">
 <summary>
  Función que devuelve un DataTable 
  en base a un stored procedure [StoredPocedure param] y
  un objeto (tipo colección) de parametros
 </summary>
</member>
<member name="M:DbManager.DataObjects.SqlManager.ExecuteDataTable(System.String)">
 <summary>
  Función que devuelve un único resultado 
  en base a una instucción SQL
 </summary>
</member>
<member name="M:DbManager.DataObjects.SqlManager.Probar_Conexion(System.String)">
 <summary>
 Funcion para obtener si un usuario tiene o no acceso al AS-400
 </summary>
</member>
<member name="P:DbManager.DataObjects.SqlManager.TimeOutCommand">
 <summary>
 Propiedad para establecer el tiempo de respuesta de un comando Sql
 </summary>
</member>
</members>
</doc>
