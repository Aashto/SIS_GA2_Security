'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.3615
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by wsdl, Version=2.0.50727.1432.
'

Namespace DataObjects

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Web.Services.WebServiceBindingAttribute(Name:="ServiceSoap", [Namespace]:="http://dataservice.com/")> _
    Partial Public Class Service
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol

        Private getDataOperationCompleted As System.Threading.SendOrPostCallback

        Private executeStatementOperationCompleted As System.Threading.SendOrPostCallback

        '''<remarks/>
        Public Sub New()
            MyBase.New()
            Me.Url = HelpClass.getSetting("DataServiceURL")
        End Sub

        '''<remarks/>
        Public Event getDataCompleted As getDataCompletedEventHandler

        '''<remarks/>
        Public Event executeStatementCompleted As executeStatementCompletedEventHandler

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dataservice.com/getData", RequestNamespace:="http://dataservice.com/", ResponseNamespace:="http://dataservice.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function getData(ByVal StoredProcedure As String, ByVal Parameters As String) As String
            Dim results() As Object = Me.Invoke("getData", New Object() {StoredProcedure, Parameters})
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Function BegingetData(ByVal StoredProcedure As String, ByVal Parameters As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getData", New Object() {StoredProcedure, Parameters}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndgetData(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Overloads Sub getDataAsync(ByVal StoredProcedure As String, ByVal Parameters As String)
            Me.getDataAsync(StoredProcedure, Parameters, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub getDataAsync(ByVal StoredProcedure As String, ByVal Parameters As String, ByVal userState As Object)
            If (Me.getDataOperationCompleted Is Nothing) Then
                Me.getDataOperationCompleted = AddressOf Me.OngetDataOperationCompleted
            End If
            Me.InvokeAsync("getData", New Object() {StoredProcedure, Parameters}, Me.getDataOperationCompleted, userState)
        End Sub

        Private Sub OngetDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDataCompleted(Me, New getDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dataservice.com/executeStatement", RequestNamespace:="http://dataservice.com/", ResponseNamespace:="http://dataservice.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function executeStatement(ByVal StoredProcedure As String, ByVal Parameters As String) As String
            Dim results() As Object = Me.Invoke("executeStatement", New Object() {StoredProcedure, Parameters})
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Function BeginexecuteStatement(ByVal StoredProcedure As String, ByVal Parameters As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("executeStatement", New Object() {StoredProcedure, Parameters}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndexecuteStatement(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Overloads Sub executeStatementAsync(ByVal StoredProcedure As String, ByVal Parameters As String)
            Me.executeStatementAsync(StoredProcedure, Parameters, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub executeStatementAsync(ByVal StoredProcedure As String, ByVal Parameters As String, ByVal userState As Object)
            If (Me.executeStatementOperationCompleted Is Nothing) Then
                Me.executeStatementOperationCompleted = AddressOf Me.OnexecuteStatementOperationCompleted
            End If
            Me.InvokeAsync("executeStatement", New Object() {StoredProcedure, Parameters}, Me.executeStatementOperationCompleted, userState)
        End Sub

        Private Sub OnexecuteStatementOperationCompleted(ByVal arg As Object)
            If (Not (Me.executeStatementCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent executeStatementCompleted(Me, New executeStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")> _
    Public Delegate Sub getDataCompletedEventHandler(ByVal sender As Object, ByVal e As getDataCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class getDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), String)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")> _
    Public Delegate Sub executeStatementCompletedEventHandler(ByVal sender As Object, ByVal e As executeStatementCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class executeStatementCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), String)
            End Get
        End Property
    End Class

End Namespace